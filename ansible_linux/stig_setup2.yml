---
# stig_check

# start of stig testing
#
# Stig tag setup:
#
#    all            - runs all tagged roles
#
#    yum_setup      - will config yum.conf and install packages
#    tmout_setup    - creates the tmout.sh file
#    audrule_setup  - config audit.rules file
#    ssh_setup      - all related to ssh
#    aide_setup     - related to aide conf file
#    misc_setup     - onies here and there
#    firewall_setup - ipv4 firewall config
#    enrootpw_setup - encrypt root password
#    pam_setup      - Pluggable Authentication modules
#    rpm_setup      - set permissions for packages
#    perm_setup     - set permissions on directories and files
#    scc_setup      - install scc stig tools
#    gui_setup      - screensaver stuff
#    reinstall_setup
#
#    ** run all roles
#       example: ansible-playbook stigs_setup.yml --ask-become-pass --tags "all"
#
#    ** run only yum_config, audit_rules_config, ssh_config
#       example: ansible-playbook stigs_setup.yml --ask-become-pass --tags "yum_setup,audrule_setup,ssh_setup"
#
#    ** to run an individual or many individual stig configurations
#       example: ansible-playbook stigs_setup.yml --ask-become-pass --tags "71923,71927"


- hosts: stig_machine_ips
  gather_facts: no
  remote_user: hcsdadm
  become: yes
  become_method: sudo
  vars:
    allfiles: []
    allpack: ""
    var2: ''

  roles:
    - { role: yum_config }
    - { role: create_tmout_file }
    - { role: audit_rules_config }
    - { role: aide_config }
    - { role: misc_config }
    - { role: firewall_config }
    - { role: encrypt_root_pw }
    - { role: rpm_config }
    - { role: reinstall_packages }
    - { role: pam_auth_config }
    - { role: gui_config }
    - { role: ssh_config }
    - { role: scc_tools }
    - { role: remove_setup_files }

...

